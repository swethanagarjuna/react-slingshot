# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
defaults: &defaults
  docker: 
      -  image: amazon/aws-cli
commands:
  to_checkout:
    description: "to checkout the code"
    steps:
      -  checkout
  destroy_environment:
    description: "to roll back"
    steps:
      - run:
          name: destroy environment
          command: aws cloudformation delete-stack --stack-name 

jobs:
  build:
    <<: *defaults
    steps:
      -  to_checkout
      -  run: npm i
      -  run: npm run lint
  test:
     <<: *defaults
     steps:
      -  to_checkout
      -  run: npm i
      -  run: npm run test
  analyse:
     <<: *defaults
     steps:
      -  to_checkout
      -  run: npm audit
      -  run:
           command: echo "job failed"
           when: on_fail
  create_infrastructure:
    docker: 
      -  image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation create-stack \
                --template-file template.yml \
                --stack-name my-stack
  configure_infrastructure:
    docker: 
      -  image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 2d:e3:43:7c:dc:0e:c9:ed:1f:21:34:0e:d8:5a:c9:55
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: verify ansible hosts
          command: |
            ansible all --list-hosts
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt playbook.yml
  smoke_test:
    docker:
        - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL} # test if blog.udacity. com exists
            then
              return 0
            else
              return 1
            fi
  failing_test_to_rollback:
    <<: *defaults
    steps:
      - run:
        name: failing smoke test
        command: |
          return 1
      - destroy_environment
        when: on_fail  
workflows:
  my_workflow:
    jobs:
      -  create_infrastructure
      -  configure_infrastructure
      -  smoke_test

     # -  build
     #-  test:
     #      requires:
     #        -  build
     # -  analyse:
     #      requires:
     #        -  test